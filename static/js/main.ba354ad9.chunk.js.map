{"version":3,"sources":["components/nav/Nav.jsx","components/homepage/CvItem.jsx","components/homepage/CvList.jsx","components/homepage/Homepage.jsx","components/showCv/ShowCv.jsx","components/addCv/AddCv.jsx","components/editCv/EditCv.jsx","RouterSwitch.jsx","allReducers.js","index.js"],"names":["Nav","className","to","CvItem","dataItem","generalInfo","educationInfo","workExperienceInfo","navigate","useNavigate","firstName","major","position","onClick","id","state","CvList","data","map","elem","uniqid","Homepage","useDispatch","useSelector","dataReducer","ShowCv","location","useLocation","lastName","email","city","university","degree","cityEdu","company","cityWork","AddCv","useState","phoneNumber","yearFromEdu","yearToEdu","yearFromWork","yearToWork","setData","onChangeGeneral","e","prev","target","name","value","onChangeEdu","newInfo","onChangeWork","dispatch","edu","htmlFor","type","onChange","work","onSubmit","preventDefault","payload","EditCv","RouterSwitch","path","element","allReducers","combineReducers","action","newArr","JSON","parse","stringify","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba354ad9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Nav.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <div className='nav-cont'>\r\n      <div className='nav-title'>CV project</div>\r\n      <Link to='/'>\r\n        <div className='nav-link'>Homepage</div>\r\n      </Link>\r\n      <Link to='/addCv'>\r\n        <div className='nav-link'>Add CV</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CvItem = ({ dataItem }) => {\r\n  const { generalInfo, educationInfo, workExperienceInfo } = dataItem;\r\n  const navigate = useNavigate();\r\n\r\n  const navigateToShowCv = () => {\r\n    navigate(`/showCv/${dataItem.id}`, { state: dataItem });\r\n  };\r\n\r\n  return (\r\n    <div className='cv-item'>\r\n      <div>{generalInfo.firstName}</div>\r\n      <div>{educationInfo[0].major}</div>\r\n      <div>{workExperienceInfo[0].position}</div>\r\n      <button className='show-btn' onClick={navigateToShowCv}>\r\n        Show\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CvItem;\r\n","import React from 'react';\r\nimport CvItem from './CvItem';\r\nimport uniqid from 'uniqid';\r\n\r\nconst CvList = ({ data }) => {\r\n  return (\r\n    <div className='cvList-cont'>\r\n      {data.map((elem) => {\r\n        return <CvItem key={uniqid()} dataItem={elem} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CvList;\r\n","import React, { useEffect } from 'react';\r\nimport './Homepage.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CvList from './CvList';\r\n\r\nconst Homepage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const data = useSelector((state) => state.dataReducer);\r\n\r\n  return (\r\n    <div className='homepage-cont'>\r\n      <CvList data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\nimport './ShowCv.css';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst ShowCv = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { generalInfo, educationInfo, workExperienceInfo } = location.state;\r\n\r\n  const navigateToEditCv = () => {\r\n    navigate(`/showCv/${location.state.id}/editCv/${location.state.id}`, {\r\n      state: location.state,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='show-cv-page'>\r\n      <div className='cv-page'>\r\n        <div>{generalInfo.firstName}</div>\r\n        <div>{generalInfo.lastName}</div>\r\n        <div>{generalInfo.email}</div>\r\n        <div>{generalInfo.city}</div>\r\n        <div>------------------</div>\r\n        <div>{educationInfo[0].university}</div>\r\n        <div>{educationInfo[0].degree}</div>\r\n        <div>{educationInfo[0].major}</div>\r\n        <div>{educationInfo[0].cityEdu}</div>\r\n        <div>------------------</div>\r\n        <div>{workExperienceInfo[0].position}</div>\r\n        <div>{workExperienceInfo[0].company}</div>\r\n        <div>{workExperienceInfo[0].cityWork}</div>\r\n        <div>{workExperienceInfo[0].cityWork}</div>\r\n        <button onClick={navigateToEditCv}>Edit</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowCv;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './AddCv.css';\r\nimport uniqid from 'uniqid';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AddCv = () => {\r\n  const [data, setData] = useState({\r\n    id: uniqid(),\r\n    generalInfo: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      city: '',\r\n      phoneNumber: '',\r\n    },\r\n    educationInfo: [\r\n      {\r\n        id: uniqid(),\r\n        university: '',\r\n        degree: '',\r\n        major: '',\r\n        cityEdu: '',\r\n        yearFromEdu: '',\r\n        yearToEdu: '',\r\n      },\r\n    ],\r\n    workExperienceInfo: [\r\n      {\r\n        id: uniqid(),\r\n        position: '',\r\n        company: '',\r\n        cityWork: '',\r\n        yearFromWork: '',\r\n        yearToWork: '',\r\n      },\r\n    ],\r\n  });\r\n  const onChangeGeneral = (e) => {\r\n    setData((prev) => {\r\n      return {\r\n        ...prev,\r\n        generalInfo: {\r\n          ...prev.generalInfo,\r\n          [e.target.name]: e.target.value,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  const onChangeEdu = (e, id) => {\r\n    setData((prev) => {\r\n      let newInfo = prev.educationInfo.map((elem) => {\r\n        if (elem.id === id) {\r\n          return { ...elem, [e.target.name]: e.target.value };\r\n        }\r\n        return elem;\r\n      });\r\n\r\n      return { ...prev, educationInfo: [...newInfo] };\r\n    });\r\n  };\r\n\r\n  const onChangeWork = (e, id) => {\r\n    setData((prev) => {\r\n      let newInfo = prev.workExperienceInfo.map((elem) => {\r\n        if (elem.id === id) {\r\n          return { ...elem, [e.target.name]: e.target.value };\r\n        }\r\n        return elem;\r\n      });\r\n\r\n      return {\r\n        ...prev,\r\n        workExperienceInfo: [...newInfo],\r\n      };\r\n    });\r\n  };\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  let edu = data.educationInfo.map((elem) => {\r\n    return (\r\n      <div className='form-block' key={elem.id}>\r\n        <div className='input-cont'>\r\n          <label htmlFor='university'>University</label>\r\n          <input\r\n            type='text'\r\n            name='university'\r\n            className='input'\r\n            onChange={(e) => onChangeEdu(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='degree'>Degree</label>\r\n          <input\r\n            type='text'\r\n            name='degree'\r\n            className='input'\r\n            onChange={(e) => onChangeEdu(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='major'>major</label>\r\n          <input\r\n            type='text'\r\n            name='major'\r\n            className='input'\r\n            onChange={(e) => onChangeEdu(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='cityEdu'>City</label>\r\n          <input\r\n            type='text'\r\n            name='cityEdu'\r\n            className='input'\r\n            onChange={(e) => onChangeEdu(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='yearFromEdu'>Year from</label>\r\n          <input\r\n            type='text'\r\n            name='yearFromEdu'\r\n            className='input'\r\n            onChange={(e) => onChangeEdu(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='yearToEdu'>Year to</label>\r\n          <input\r\n            type='text'\r\n            name='yearToEdu'\r\n            className='input'\r\n            onChange={(e) => onChangeEdu(e, elem.id)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  let work = data.workExperienceInfo.map((elem) => {\r\n    return (\r\n      <div className='form-block' key={elem.id}>\r\n        <div className='input-cont'>\r\n          <label htmlFor='position'>Position</label>\r\n          <input\r\n            type='text'\r\n            name='position'\r\n            className='input'\r\n            onChange={(e) => onChangeWork(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='company'>Company</label>\r\n          <input\r\n            type='text'\r\n            name='company'\r\n            className='input'\r\n            onChange={(e) => onChangeWork(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='cityWork'>City</label>\r\n          <input\r\n            type='text'\r\n            name='cityWork'\r\n            className='input'\r\n            onChange={(e) => onChangeWork(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='yearFromWork'>Year from</label>\r\n          <input\r\n            type='text'\r\n            name='yearFromWork'\r\n            className='input'\r\n            onChange={(e) => onChangeWork(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='yearToWork'>Year to</label>\r\n          <input\r\n            type='text'\r\n            name='yearToWork'\r\n            className='input'\r\n            onChange={(e) => onChangeWork(e, elem.id)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className='add-cv-form-page'>\r\n      <form\r\n        className='add-cv-form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          dispatch({ type: 'ADD_DATA', payload: data });\r\n          navigate('/');\r\n        }}\r\n      >\r\n        <div className='lolo'>\r\n          <div className='form-block'>\r\n            <div className='input-cont'>\r\n              <label htmlFor='firstName'>First name</label>\r\n              <input\r\n                type='text'\r\n                name='firstName'\r\n                className='input'\r\n                onChange={(e) => onChangeGeneral(e)}\r\n              />\r\n            </div>\r\n            <div className='input-cont'>\r\n              <label htmlFor='lastName'>Last name</label>\r\n              <input\r\n                type='text'\r\n                name='lastName'\r\n                className='input'\r\n                onChange={(e) => onChangeGeneral(e)}\r\n              />\r\n            </div>\r\n            <div className='input-cont'>\r\n              <label htmlFor='email'>Email</label>\r\n              <input\r\n                type='text'\r\n                name='email'\r\n                className='input'\r\n                onChange={(e) => onChangeGeneral(e)}\r\n              />\r\n            </div>\r\n            <div className='input-cont'>\r\n              <label htmlFor='city'>City</label>\r\n              <input\r\n                type='text'\r\n                name='city'\r\n                className='input'\r\n                onChange={(e) => onChangeGeneral(e)}\r\n              />\r\n            </div>\r\n            <div className='input-cont'>\r\n              <label htmlFor='phoneNumber'>Phone number</label>\r\n              <input\r\n                type='text'\r\n                name='phoneNumber'\r\n                className='input'\r\n                onChange={(e) => onChangeGeneral(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='lolo'>\r\n          {edu}\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setData((prev) => {\r\n                return {\r\n                  ...prev,\r\n                  educationInfo: [\r\n                    ...prev.educationInfo,\r\n                    {\r\n                      id: uniqid(),\r\n                      university: '',\r\n                      degree: '',\r\n                      major: '',\r\n                      cityEdu: '',\r\n                      yearFromEdu: '',\r\n                      yearToEdu: '',\r\n                    },\r\n                  ],\r\n                };\r\n              });\r\n            }}\r\n          >\r\n            Add education info\r\n          </button>\r\n        </div>\r\n        <div className='lolo'>\r\n          {work}\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setData((prev) => {\r\n                return {\r\n                  ...prev,\r\n                  workExperienceInfo: [\r\n                    ...prev.workExperienceInfo,\r\n                    {\r\n                      id: uniqid(),\r\n                      position: '',\r\n                      company: '',\r\n                      cityWork: '',\r\n                      yearFromWork: '',\r\n                      yearToWork: '',\r\n                    },\r\n                  ],\r\n                };\r\n              });\r\n            }}\r\n          >\r\n            Add work experience info\r\n          </button>\r\n        </div>\r\n        <button className='submit-form-btn'>Submit form</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default AddCv;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './EditCv.css';\r\nimport uniqid from 'uniqid';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst EditCv = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const location = useLocation();\r\n  const [data, setData] = useState(location.state);\r\n\r\n  const onChangeGeneral = (e) => {\r\n    setData((prev) => {\r\n      return {\r\n        ...prev,\r\n        generalInfo: {\r\n          ...prev.generalInfo,\r\n          [e.target.name]: e.target.value,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  const onChangeEdu = (e, id) => {\r\n    setData((prev) => {\r\n      let newInfo = prev.educationInfo.map((elem) => {\r\n        if (elem.id === id) {\r\n          return { ...elem, [e.target.name]: e.target.value };\r\n        }\r\n        return elem;\r\n      });\r\n\r\n      return { ...prev, educationInfo: [...newInfo] };\r\n    });\r\n  };\r\n\r\n  const onChangeWork = (e, id) => {\r\n    setData((prev) => {\r\n      let newInfo = prev.workExperienceInfo.map((elem) => {\r\n        if (elem.id === id) {\r\n          return { ...elem, [e.target.name]: e.target.value };\r\n        }\r\n        return elem;\r\n      });\r\n\r\n      return {\r\n        ...prev,\r\n        workExperienceInfo: [...newInfo],\r\n      };\r\n    });\r\n  };\r\n\r\n  let edu = data.educationInfo.map((elem) => {\r\n    return (\r\n      <div className='form-block' key={elem.id}>\r\n        <div className='input-cont'>\r\n          <label htmlFor='university'>University</label>\r\n          <input\r\n            type='text'\r\n            name='university'\r\n            className='input'\r\n            value={elem.university}\r\n            onChange={(e) => onChangeEdu(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='degree'>Degree</label>\r\n          <input\r\n            type='text'\r\n            name='degree'\r\n            className='input'\r\n            value={elem.degree}\r\n            onChange={(e) => onChangeEdu(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='major'>major</label>\r\n          <input\r\n            type='text'\r\n            name='major'\r\n            className='input'\r\n            value={elem.major}\r\n            onChange={(e) => onChangeEdu(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='cityEdu'>City</label>\r\n          <input\r\n            type='text'\r\n            name='cityEdu'\r\n            className='input'\r\n            value={elem.cityEdu}\r\n            onChange={(e) => onChangeEdu(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='yearFromEdu'>Year from</label>\r\n          <input\r\n            type='text'\r\n            name='yearFromEdu'\r\n            className='input'\r\n            value={elem.yearFromEdu}\r\n            onChange={(e) => onChangeEdu(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='yearToEdu'>Year to</label>\r\n          <input\r\n            type='text'\r\n            name='yearToEdu'\r\n            className='input'\r\n            value={elem.yearToEdu}\r\n            onChange={(e) => onChangeEdu(e, elem.id)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  let work = data.workExperienceInfo.map((elem) => {\r\n    return (\r\n      <div className='form-block' key={elem.id}>\r\n        <div className='input-cont'>\r\n          <label htmlFor='position'>Position</label>\r\n          <input\r\n            type='text'\r\n            name='position'\r\n            className='input'\r\n            value={elem.position}\r\n            onChange={(e) => onChangeWork(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='company'>Company</label>\r\n          <input\r\n            type='text'\r\n            name='company'\r\n            className='input'\r\n            value={elem.company}\r\n            onChange={(e) => onChangeWork(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='cityWork'>City</label>\r\n          <input\r\n            type='text'\r\n            name='cityWork'\r\n            className='input'\r\n            value={elem.cityWork}\r\n            onChange={(e) => onChangeWork(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='yearFromWork'>Year from</label>\r\n          <input\r\n            type='text'\r\n            name='yearFromWork'\r\n            className='input'\r\n            value={elem.yearFromWork}\r\n            onChange={(e) => onChangeWork(e, elem.id)}\r\n          />\r\n        </div>\r\n        <div className='input-cont'>\r\n          <label htmlFor='yearToWork'>Year to</label>\r\n          <input\r\n            type='text'\r\n            name='yearToWork'\r\n            className='input'\r\n            value={elem.yearToWork}\r\n            onChange={(e) => onChangeWork(e, elem.id)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className='edit-cv-form-page'>\r\n      <form\r\n        className='edit-cv-form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          dispatch({ type: 'EDIT_DATA', payload: data });\r\n          navigate('/');\r\n        }}\r\n      >\r\n        <div className='lolo'>\r\n          <div className='form-block'>\r\n            <div className='input-cont'>\r\n              <label htmlFor='firstName'>First name</label>\r\n              <input\r\n                type='text'\r\n                name='firstName'\r\n                className='input'\r\n                value={data.generalInfo.firstName}\r\n                onChange={(e) => onChangeGeneral(e)}\r\n              />\r\n            </div>\r\n            <div className='input-cont'>\r\n              <label htmlFor='lastName'>Last name</label>\r\n              <input\r\n                type='text'\r\n                name='lastName'\r\n                className='input'\r\n                value={data.generalInfo.lastName}\r\n                onChange={(e) => onChangeGeneral(e)}\r\n              />\r\n            </div>\r\n            <div className='input-cont'>\r\n              <label htmlFor='email'>Email</label>\r\n              <input\r\n                type='text'\r\n                name='email'\r\n                className='input'\r\n                value={data.generalInfo.email}\r\n                onChange={(e) => onChangeGeneral(e)}\r\n              />\r\n            </div>\r\n            <div className='input-cont'>\r\n              <label htmlFor='city'>City</label>\r\n              <input\r\n                type='text'\r\n                name='city'\r\n                className='input'\r\n                value={data.generalInfo.city}\r\n                onChange={(e) => onChangeGeneral(e)}\r\n              />\r\n            </div>\r\n            <div className='input-cont'>\r\n              <label htmlFor='phoneNumber'>Phone number</label>\r\n              <input\r\n                type='text'\r\n                name='phoneNumber'\r\n                className='input'\r\n                value={data.generalInfo.phoneNumber}\r\n                onChange={(e) => onChangeGeneral(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='lolo'>\r\n          {edu}\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setData((prev) => {\r\n                return {\r\n                  ...prev,\r\n                  educationInfo: [\r\n                    ...prev.educationInfo,\r\n                    {\r\n                      id: uniqid(),\r\n                      university: '',\r\n                      degree: '',\r\n                      major: '',\r\n                      cityEdu: '',\r\n                      yearFromEdu: '',\r\n                      yearToEdu: '',\r\n                    },\r\n                  ],\r\n                };\r\n              });\r\n            }}\r\n          >\r\n            Add education info\r\n          </button>\r\n        </div>\r\n        <div className='lolo'>\r\n          {work}\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setData((prev) => {\r\n                return {\r\n                  ...prev,\r\n                  workExperienceInfo: [\r\n                    ...prev.workExperienceInfo,\r\n                    {\r\n                      id: uniqid(),\r\n                      position: '',\r\n                      company: '',\r\n                      cityWork: '',\r\n                      yearFromWork: '',\r\n                      yearToWork: '',\r\n                    },\r\n                  ],\r\n                };\r\n              });\r\n            }}\r\n          >\r\n            Add work experience info\r\n          </button>\r\n        </div>\r\n        <button className='submit-form-btn'>Submit form</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default EditCv;\r\n","import React from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport Nav from './components/nav/Nav';\r\nimport Homepage from './components/homepage/Homepage';\r\nimport ShowCv from './components/showCv/ShowCv';\r\nimport AddCv from './components/addCv/AddCv';\r\nimport EditCv from './components/editCv/EditCv';\r\n\r\nfunction RouterSwitch() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className='main-cont'>\r\n        <Nav />\r\n        <Routes>\r\n          <Route path='/' element={<Homepage />} />\r\n          <Route path='/addCv' element={<AddCv />} />\r\n          <Route path='/showCv/:id' element={<ShowCv />} />\r\n          <Route path='/showCv/:id/editCv/:id' element={<EditCv />} />\r\n        </Routes>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\nexport default RouterSwitch;\r\n","import { combineReducers } from 'redux';\r\n\r\nfunction dataReducer(state = [], action) {\r\n  if (action.type === 'ADD_DATA') {\r\n    state = [...state, action.payload];\r\n  } else if (action.type === 'EDIT_DATA') {\r\n    let newArr = state.map((elem) => {\r\n      if (elem.id === action.payload.id) {\r\n        elem = JSON.parse(JSON.stringify(action.payload));\r\n      }\r\n      return elem;\r\n    });\r\n    return newArr;\r\n  }\r\n  return state;\r\n}\r\n\r\nlet allReducers = combineReducers({\r\n  dataReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RouterSwitch from './RouterSwitch';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport allReducers from './allReducers';\n\nlet store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <RouterSwitch />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}